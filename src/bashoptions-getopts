#!/bin/bash
# Options parsing in bash, using bash builtin getopts (single letter options)
# This is a TEMPLATE consisting of 2 sections, the ones not indented + intro
# to be copy/pasted in your bash scripts.
# Get only what to paste (without the examples) by running this script itself.
# shellcheck disable=SC2046
[ -z "$*" ]&&sed -e '1,/^#--/d;/^[[:space:]]/d' $(realpath $(which "$0"));exit
#
# This version just adds the definition of the convenience functions of
# bashoptions to a standard use of getopts.
#-----------------------------------------------------------------------------

# User manual:
USAGE=''
    # Complete the string above, including the documentation of options

# Options default values:
    # Examples, replace with your code
    value=default
    n=true

# Options list
OPTIONS=''
    # Options list for getopts, with : appended for args: e.g: "na:"
    # 'hv?' will be added automatically

# shellcheck disable=SC2015,SC2016,SC2034,SC2046,SC2089,SC2090,SC2219 #########
{ V(){ :;};T(){ :;};v=false;E(){ echo "$@";};En(){ E -n "$@";};VV(){ :;}
err(){ E "***ERROR: $*" >&2; exit 1;};warn(){ E "###Warning: $*" >&2;};nl=$'\n'
OPTIND=1;while getopts ":${OPTIONS}hv?" _o;do case "$_o" in
#----single letter options start-----------------------------------------

    # Examples, replace with your code
    n) value=false;;	            # with no argument
    a) value="$OPTARG";;            # with an argument

#----single letter options end-------------------------------------------
v)T(){ local i;{ En "==";for i in "$@";do [[ $i =~ [^_[:alnum:]] ]]&&En " $i"||
En " $i=${!i}";done;E;}>&2;};V(){ E "== $*" >&2;};v=true;;h) E "$USAGE";exit;;
\?)err "Bad option: -$OPTARG, -h for help.";;':')err "Missing arg: -$OPTARG";;
*)err "Bad option: -$_o, -h for help.";esac;done;shift $((OPTIND-1));}
#----end of https://github.com/ColasNahaboo/bashoptions-(getopts)----------v1.0

    # The rest of your code
    echo "n=$n value=[$value] rest=[$*]"
